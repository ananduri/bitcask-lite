(Build working hash index storage engine)

(Create a prompt)

(Design layout 
 of segment file
 
 (Remember to reserve byte for terminating '\0')
 
 (What information needs to be stored?)
 
 (How long each value is (how many bytes to read)))

(Initialize in-memory hash-map
 
 (Allocate on the heap?)
 
 (Does C have data structures for this?
  No)
 
 (* Create hash table using separate chaining
  
  (Write a hash function
   (Defer creating a good one))
  
  (Create array of pointers to singly linked lists
   
   (Check if current node is occupied somehow))))

(? Break out hashmap implementation
   from rest of file)

(Write key-values
 to a segment file)

(Fragment segment files
 
 (Close and store old file
  when full)
 
 (Create new segment file)
 
 (Start writing to new segment file))

(Compact closed segment files)

(Merge closed segment files

 (Compact and merge
   simultaneously))

(Implement multithreaded reads)

(Compact and merge
 in a background thread)

